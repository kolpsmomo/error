// @ts-nocheck
/* eslint-disable */
/**
 * Bulldrop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PUBGSubjectQualityColorEnum } from './PUBGSubjectQualityColorEnum';
import {
    PUBGSubjectQualityColorEnumFromJSON,
    PUBGSubjectQualityColorEnumFromJSONTyped,
    PUBGSubjectQualityColorEnumToJSON,
} from './PUBGSubjectQualityColorEnum';

/**
 * 
 * @export
 * @interface PUBGSubjectTyped
 */
export interface PUBGSubjectTyped {
    /**
     * 
     * @type {number}
     * @memberof PUBGSubjectTyped
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof PUBGSubjectTyped
     */
    readonly img: string;
    /**
     * 
     * @type {string}
     * @memberof PUBGSubjectTyped
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PUBGSubjectTyped
     */
    type: string | null;
    /**
     * 
     * @type {number}
     * @memberof PUBGSubjectTyped
     */
    price: number;
    /**
     * 
     * @type {PUBGSubjectQualityColorEnum}
     * @memberof PUBGSubjectTyped
     */
    qualityColor: PUBGSubjectQualityColorEnum;
    /**
     * 
     * @type {string}
     * @memberof PUBGSubjectTyped
     */
    resourcetype: string;
}

/**
 * Check if a given object implements the PUBGSubjectTyped interface.
 */
export function instanceOfPUBGSubjectTyped(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "img" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "qualityColor" in value;
    isInstance = isInstance && "resourcetype" in value;

    return isInstance;
}

export function PUBGSubjectTypedFromJSON(json: any): PUBGSubjectTyped {
    return PUBGSubjectTypedFromJSONTyped(json, false);
}

export function PUBGSubjectTypedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PUBGSubjectTyped {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'img': json['img'],
        'name': json['name'],
        'type': json['type'],
        'price': json['price'],
        'qualityColor': PUBGSubjectQualityColorEnumFromJSON(json['quality_color']),
        'resourcetype': json['resourcetype'],
    };
}

export function PUBGSubjectTypedToJSON(value?: PUBGSubjectTyped | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'price': value.price,
        'quality_color': PUBGSubjectQualityColorEnumToJSON(value.qualityColor),
        'resourcetype': value.resourcetype,
    };
}

