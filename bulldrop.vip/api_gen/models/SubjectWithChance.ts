// @ts-nocheck
/* eslint-disable */
/**
 * Bulldrop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Subject } from './Subject';
import {
    SubjectFromJSON,
    SubjectFromJSONTyped,
    SubjectToJSON,
} from './Subject';

/**
 * 
 * @export
 * @interface SubjectWithChance
 */
export interface SubjectWithChance {
    /**
     * 
     * @type {number}
     * @memberof SubjectWithChance
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof SubjectWithChance
     */
    img: string;
    /**
     * 
     * @type {string}
     * @memberof SubjectWithChance
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof SubjectWithChance
     */
    price: number;
    /**
     * 
     * @type {string}
     * @memberof SubjectWithChance
     */
    qualityColor: string;
    /**
     * 
     * @type {number}
     * @memberof SubjectWithChance
     */
    chance: number;
    /**
     * 
     * @type {Subject}
     * @memberof SubjectWithChance
     */
    readonly subject: Subject;
}

/**
 * Check if a given object implements the SubjectWithChance interface.
 */
export function instanceOfSubjectWithChance(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "img" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "qualityColor" in value;
    isInstance = isInstance && "chance" in value;
    isInstance = isInstance && "subject" in value;

    return isInstance;
}

export function SubjectWithChanceFromJSON(json: any): SubjectWithChance {
    return SubjectWithChanceFromJSONTyped(json, false);
}

export function SubjectWithChanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubjectWithChance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'img': json['img'],
        'name': json['name'],
        'price': json['price'],
        'qualityColor': json['quality_color'],
        'chance': json['chance'],
        'subject': SubjectFromJSON(json['subject']),
    };
}

export function SubjectWithChanceToJSON(value?: SubjectWithChance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'img': value.img,
        'name': value.name,
        'price': value.price,
        'quality_color': value.qualityColor,
        'chance': value.chance,
    };
}

