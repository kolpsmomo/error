// @ts-nocheck
/* eslint-disable */
/**
 * Bulldrop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Subject } from './Subject';
import {
    SubjectFromJSON,
    SubjectFromJSONTyped,
    SubjectToJSON,
} from './Subject';

/**
 * 
 * @export
 * @interface InventoryTyped
 */
export interface InventoryTyped {
    /**
     * 
     * @type {number}
     * @memberof InventoryTyped
     */
    readonly id: number;
    /**
     * 
     * @type {Subject}
     * @memberof InventoryTyped
     */
    readonly subject: Subject;
    /**
     * 
     * @type {Date}
     * @memberof InventoryTyped
     */
    dtAdded: Date;
    /**
     * 
     * @type {string}
     * @memberof InventoryTyped
     */
    resourcetype: string;
}

/**
 * Check if a given object implements the InventoryTyped interface.
 */
export function instanceOfInventoryTyped(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "subject" in value;
    isInstance = isInstance && "dtAdded" in value;
    isInstance = isInstance && "resourcetype" in value;

    return isInstance;
}

export function InventoryTypedFromJSON(json: any): InventoryTyped {
    return InventoryTypedFromJSONTyped(json, false);
}

export function InventoryTypedFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryTyped {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'subject': SubjectFromJSON(json['subject']),
        'dtAdded': (new Date(json['dt_added'])),
        'resourcetype': json['resourcetype'],
    };
}

export function InventoryTypedToJSON(value?: InventoryTyped | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dt_added': (value.dtAdded.toISOString()),
        'resourcetype': value.resourcetype,
    };
}

