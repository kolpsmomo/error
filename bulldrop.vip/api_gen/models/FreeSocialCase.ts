// @ts-nocheck
/* eslint-disable */
/**
 * Bulldrop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Subject } from './Subject';
import {
    SubjectFromJSON,
    SubjectFromJSONTyped,
    SubjectToJSON,
} from './Subject';

/**
 * 
 * @export
 * @interface FreeSocialCase
 */
export interface FreeSocialCase {
    /**
     * 
     * @type {string}
     * @memberof FreeSocialCase
     */
    img: string;
    /**
     * 
     * @type {string}
     * @memberof FreeSocialCase
     */
    readonly name: string;
    /**
     * 
     * @type {string}
     * @memberof FreeSocialCase
     */
    location: string;
    /**
     * 
     * @type {Array<Subject>}
     * @memberof FreeSocialCase
     */
    readonly subjects: Array<Subject> | null;
    /**
     * 
     * @type {string}
     * @memberof FreeSocialCase
     */
    readonly canOpenAfter: string | null;
}

/**
 * Check if a given object implements the FreeSocialCase interface.
 */
export function instanceOfFreeSocialCase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "img" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "subjects" in value;
    isInstance = isInstance && "canOpenAfter" in value;

    return isInstance;
}

export function FreeSocialCaseFromJSON(json: any): FreeSocialCase {
    return FreeSocialCaseFromJSONTyped(json, false);
}

export function FreeSocialCaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FreeSocialCase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'img': json['img'],
        'name': json['name'],
        'location': json['location'],
        'subjects': (json['subjects'] === null ? null : (json['subjects'] as Array<any>).map(SubjectFromJSON)),
        'canOpenAfter': json['can_open_after'],
    };
}

export function FreeSocialCaseToJSON(value?: FreeSocialCase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'img': value.img,
        'location': value.location,
    };
}

